WidGet file, version 1.1, created:  Tue Jul 29 18:18:47 PDT 1997
Widget entry#3
	geometry row 3
	other error {}
	other type entry
	configure textvariable ecompany
	other master {}
	other pathname entry#3
	other tags {}
	other level {}
	other help {}
	configure borderwidth 4
	other comments {}
	configure cursor {}
	geometry column 3
	other item_name entryCompany
	other tabbing {}
Widget label#1
	geometry row 2
	other error {}
	other type label
	configure anchor w
	other master {}
	configure text Name
	other pathname label#1
	other tags {}
	other level {}
	other help {}
	geometry column 2
	other comments {}
	geometry sticky nesw
	other item_name label#1
	other tabbing {}
Widget entry#8
	geometry row 2
	other error {}
	other type entry
	configure textvariable ename
	other master {}
	other pathname entry#8
	other tags {}
	other level {}
	other help {}
	geometry column 3
	configure cursor {}
	configure borderwidth 4
	other comments {}
	other tabbing {}
	other item_name entryName
Widget label#2
	geometry row 3
	other error {}
	other type label
	configure anchor w
	other master {}
	configure text Company
	other pathname label#2
	other tags {}
	other level {}
	other help {}
	geometry column 2
	other comments {}
	geometry sticky nesw
	other item_name label#2
	other tabbing {}
Widget label#3
	geometry row 4
	other error {}
	other type label
	configure anchor w
	other master {}
	configure text E-mail
	other pathname label#3
	other tags {}
	other level {}
	other help {}
	geometry column 2
	other comments {}
	geometry sticky nesw
	other item_name label#3
	other tabbing {}
Widget f
	other generic_options {button {
		} canvas {
		} checkbutton {
		} entry {
		} frame {
		} label {
		} listbox {
		} menubutton {
		} message {
		} radiobutton {
		} scale {
		} scrollbar {
		} text {
		}
	}
	other panel {}
	other resize_row {0 0 0 0 0}
	other type frame
	other code {# The exEntry.ui example shows how to bind an
# individual entry widget to a Key-Return event
# and how to use a bindtag (Entry) that bind
# all entry widgets to a Key-Return event.

bind Entry <Key-Return> {ShowEntry %W}
bind .entryEmail <Key-Return> {ShowEmailEntry %W}

proc ShowEntry {w} {
  append s "widget name: $w \n"
  append s "proc name: ShowEntry \n"
  append s "text: [$w get] \n"
  puts stdout $s
}

proc ShowEmailEntry {w} {
  global email
  append s "widget name: $w \n"
  append s "proc name: ShowEmailEntry \n"
  append s "text: $email \n"
  puts stdout $s
}














}
	other min_row {9 30 31 30 10}
	other master {}
	other pathname f
	other resize_column {0 0 0 0}
	other tags {}
	other level 0
	configure background #e9e9e9
	other min_column {10 30 30 17}
	other help {}
	other Colors {black white bisque grey red green blue magenta yellow #AE00B200C300}
	other comments {}
	other item_name f
	other tabbing {}
Widget entry#5
	geometry row 4
	other error {}
	other type entry
	configure textvariable email
	other master {}
	other pathname entry#5
	other tags {}
	other level {}
	other help {}
	geometry column 3
	other comments {}
	configure borderwidth 4
	other item_name entryEmail
	other tabbing {}

